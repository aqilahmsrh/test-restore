name: Backup and Restore MySQL Database

on:

  workflow_dispatch:
    inputs:
      # version:
      #   description: 'Repo Tag Name (Ex.: yyyymmdd-hhmmss)'
      #   type: string
      #   required: true
      environment:
        description: 'dexsit/dexuat/uat/sit'
        type: string
        required: true

jobs:

  DEXSIT-backup-restore:
    if: inputs.environment == 'dexsit'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Create MySQL Database Dump
      #   env:
      #     DEXSIT_DB_USER: ${{ secrets.DEXSIT_DB_USER }}
      #     DEXSIT_DB_PASSWORD: ${{ secrets.DEXSIT_DB_PASSWORD }} 
      #     DEXSIT_DB_HOST: ${{ secrets.DEXSIT_DB_HOST }} 
      #     DEXSIT_DB_NAME: test-db
      #   run: |
      #     TIMESTAMP=$(date +"%Y%m%d%H%M%S")
      #     LOCAL_DUMP_FILE="dump-${{ inputs.environment }}-${TIMESTAMP}.sql"
      #     mysqldump -h $DEXSIT_DB_HOST -u $DEXSIT_DB_USER -p$DEXSIT_DB_PASSWORD $DEXSIT_DB_NAME > $LOCAL_DUMP_FILE
      #     echo "LOCAL_DUMP_FILE=$LOCAL_DUMP_FILE" >> $GITHUB_ENV
      
      # - name: check
      #   run: |
      #     echo ${{ env.LOCAL_DUMP_FILE }}

      # - name: 'Create Artifacts'
      #   id: 'create_artifacts'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.LOCAL_DUMP_FILE }}
      #     path: ${{ env.LOCAL_DUMP_FILE }}

      # - name: Upload Backup to S3
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #     BUCKET_NAME: s3://bucket-test-777/backup-db/
      #   run: |
      #     aws s3 cp ${{ env.LOCAL_DUMP_FILE }} $BUCKET_NAME

      - name: Download Developer SQL File from S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          # BUCKET_NAME: s3://bucket-test-777/restore-db/dump-dex-2610-amp-202310261709.sql
          # # S3_DUMP_FILE: dump-dex-2610-amp-202310261709.sql
          # LOCAL_DUMP_FILE: dex-restore-1.sql
        run: |
          latest_version_key=$(aws s3api list-object-versions --bucket bucket-test-777 --prefix restore-db | jq -r '.Versions | sort_by(.LastModified) | last | .VersionId')
          aws s3 cp s3://bucket-test-777/restore-db . --version-id $latest_version_id
          echo "latest_version_key=$latest_version_key" >> $GITHUB_ENV

      - name: 'Create Artifacts'
        id: 'create_artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.latest_version_key }}
          path: ${{ env.latest_version_key }}



      # - name: Restore MySQL Database from Developer SQL File
      #   env:
      #     DB_USER: ${{ secrets.DB_USER }}
      #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }} 
      #     DB_HOST: ${{ secrets.DB_HOST }} 
      #     DB_NAME: test-db
      #     LOCAL_DUMP_FILE: dex-restore-1.sql
      #   run: |
      #     mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_NAME < $LOCAL_DUMP_FILE
